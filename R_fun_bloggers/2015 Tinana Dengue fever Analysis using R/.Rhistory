shiny::runApp('Desktop/Dashboard/ds-bi-metrics/FCB-project')
View(post)
runApp('Desktop/Dashboard/ds-bi-metrics/FCB-project')
runApp('Desktop/Dashboard/ds-bi-metrics/FCB-project')
View(post)
runApp('Desktop/Dashboard/ds-bi-metrics/FCB-project')
View(post)
runApp('Desktop/Dashboard/ds-bi-metrics/FCB-project')
shiny::runApp('Desktop/test')
runApp('Desktop/test')
runApp('Desktop/test')
runApp('Desktop/test')
runApp('Desktop/test')
shiny::runApp('Desktop/test')
runApp('Desktop/Dashboard/FirstBI')
shiny::runApp('Desktop/test')
shiny::runApp('Desktop/Dashboard/ds-bi-metrics/FCB-project')
runApp('Desktop/Dashboard/ds-bi-metrics/FCB-project')
runApp('Desktop/Dashboard/ds-bi-metrics/Brett-Favre-project')
runApp('Desktop/Dashboard/ds-bi-metrics/Brett-Favre-project')
runApp('Desktop/Dashboard/ds-bi-metrics/Brett-Favre-project')
runApp('Desktop/Dashboard/ds-bi-metrics/Brett-Favre-project')
runApp('Desktop/test')
runApp('Desktop/test')
runApp('Desktop/test')
runApp('Desktop/test')
shiny::runApp('Desktop/test')
runApp('Desktop/test')
runApp('Desktop/test')
runApp('Desktop/test')
runApp('Desktop/test')
runApp('Desktop/test')
runApp('Desktop/test')
runApp('Desktop/test')
runApp('Desktop/test')
runApp('Desktop/test')
runApp('Desktop/Dashboard/ds-bi-metrics/FCB-project')
shiny::runApp('Desktop/Dashboard/ds-bi-metrics/Brett-Favre-project')
runApp('Desktop/Dashboard/ds-bi-metrics/FCB-project')
runApp('Desktop/Dashboard/ds-bi-metrics/FCB-project')
shiny::runApp('Desktop/Dashboard/ds-bi-metrics/Brett-Favre-project')
runApp('Desktop/Dashboard/ds-bi-metrics/FCB-project')
runApp('Desktop/test')
shiny::runApp('Desktop/Dashboard/ds-bi-metrics/FCB-project')
runApp('Desktop/test')
runApp('Desktop/Dashboard/ds-bi-metrics/FCB-project')
runApp('Desktop/Dashboard/ds-bi-metrics/FCB-project')
runApp('Desktop/Dashboard/ds-bi-metrics/FCB-project')
runApp('Desktop/Dashboard/ds-bi-metrics/FCB-project')
runApp('Desktop/test')
runApp('Desktop/test')
shiny::runApp('Desktop/test')
runApp('Desktop/test')
shiny::runApp('Desktop/test')
shiny::runApp('Desktop/test')
shiny::runApp('Desktop/test')
shiny::runApp('Desktop/test')
View(data)
View(engage)
View(data)
View(data)
View(ts_update)
View(ts_chart)
View(ts_update)
previous_week <- ts_update %>% filter(Date < 2012-12-06) %>% tail(1)
View(previous_week)
previous_week <- ts_update %>% filter(Date < 2012-12-06)
View(previous_week)
previous_week <- ts_update %>% filter(ts_update, Date > 2012-12-06)
previous_week <- ts_update %>% filter(Date > 2012-12-06)
View(previous_week)
previous_week <- ts_update %>% filter(Date < 2015-12-06) %>% tail(1)
previous_week <- ts_update %>% filter(Date < 2015-12-05) %>% tail(1)
previous_week <- ts_update %>% filter(Date < 2015-12-05)
previous_week <- ts_update %>% filter(Date > 2015-12-05)
previous_week <- ts_chart %>% filter(Date > 2015-12-05)
View(previous_week)
previous_week <- ts_chart %>% filter(Date < Dec-06)
previous_week <- ts_chart %>% filter(Date < 'Dec-06')
View(previous_week)
previous_week <- ts_chart %>% filter(Date < 'Dec-06') %>% tail(1)
View(previous_week)
View(ts_update)
View(ts_update)
runApp('Desktop/test')
View(Last_week)
View(previous_week)
runApp('Desktop/test')
View(Week_last)
View(Week_previous)
View(Week_last)
View(Week_previous)
View(Week_last)
View(Week_previous)
View(Week_last)
View(Week_previous)
View(Week_last)
runApp('Desktop/test')
View(Week_last)
View(Week_previous)
View(Week_last)
View(Week_previous)
View(Week_last)
View(Week_previous)
View(Week_last)
View(Week_previous)
View(ts_update)
runApp('Desktop/test')
View(Week_1)
View(Week_2)
View(Week_1)
View(Week_2)
View(Week_1)
View(Week_2)
runApp('Desktop/test')
runApp('Desktop/test')
View(Weekly_Report)
runApp('Desktop/test')
runApp('Desktop/test')
View(Weekly_Report)
runApp('Desktop/test')
View(Weekly_Report)
runApp('Desktop/test')
View(Weekly_Report)
View(Weekly_Report)
runApp('Desktop/test')
View(Weekly_Report)
View(Week_1)
View(Week_2)
View(Week_1)
View(Week_2)
runApp('Desktop/test')
runApp('Desktop/test')
View(Weekly_Report)
runApp('Desktop/test')
runApp('Desktop/test')
View(Weekly_Report)
View(Weekly_Report)
runApp('Desktop/test')
runApp('Desktop/test')
runApp('Desktop/test')
runApp('Desktop/test')
View(Weekly_Report)
runApp('Desktop/test')
runApp('Desktop/test')
runApp('Desktop/test')
runApp('Desktop/test')
Weekly_Report[1,3] <- 100 * (Weekly_Report[1,1]-Weekly_Report[1,2]) / (Weekly_Report[1,2]) %>% round(digits=2)
View(Weekly_Report)
Weekly_Report[1,3] <- (100 * (Weekly_Report[1,1]-Weekly_Report[1,2]) / (Weekly_Report[1,2])) %>% round(digits=2)
View(Weekly_Report)
format(round(x, 2), nsmall = 2)
> Weekly_Report[1,3] <- (100 * (Weekly_Report[1,1]-Weekly_Report[1,2]) / (Weekly_Report[1,2])) %>% format(digits=2)
format(round(x, 2), nsmall = 2)
> Weekly_Report[1,3] <- (100 * (Weekly_Report[1,1]-Weekly_Report[1,2]) / (Weekly_Report[1,2])) %>% format(round(x, 2), nsmall = 2)
format(round(x, 2), nsmall = 2)
> Weekly_Report[1,3] <- (100 * (Weekly_Report[1,1]-Weekly_Report[1,2]) / (Weekly_Report[1,2])) %>% format(round(2), nsmall = 2)
format(round(x, 2), nsmall = 2)
> Weekly_Report[1,3] <- (100 * (Weekly_Report[1,1]-Weekly_Report[1,2]) / (Weekly_Report[1,2])) %>% format(round 2)
format(round(x, 2), nsmall = 2)
> Weekly_Report[1,3] <- (100 * (Weekly_Report[1,1]-Weekly_Report[1,2]) / (Weekly_Report[1,2]))
Weekly_Report[1,3] <- format(round(Weekly_Report[1,3],2))
round(Weekly_Report[1,3], digits = 2)
View(Weekly_Report)
runApp('Desktop/test')
View(Weekly_Report)
runApp('Desktop/test')
runApp('Desktop/test')
View(Weekly_Report)
runApp('Desktop/test')
runApp('Desktop/test')
runApp('Desktop/test')
output$Weekly_F_Box <- renderValueBox({
runApp('Desktop/test')
install.packages("randomForest")
install.packages("rvest")
install.packages("htmltools")
shiny::runApp('Desktop/Dashboard/ds-bi-metrics/shiny_dashboard')
runApp('Desktop/Dashboard/ds-bi-metrics/shiny_dashboard')
View(TwitterImp)
View(potentialReachData)
runApp('Desktop/Dashboard/ds-bi-metrics/shiny_dashboard')
runApp('Desktop/Dashboard/ds-bi-metrics/shiny_dashboard')
View(potentialReachData)
runApp('Desktop/Dashboard/ds-bi-metrics/shiny_dashboard')
install.packages("rattle")
install.packages("rpart.plot")
install.packages("RColorBrewer")
shiny::runApp('Desktop/Dashboard/ds-bi-metrics/shiny_dashboard')
View(registerUserData)
View(splunk_data)
shiny::runApp('Desktop/Dashboard/KPI')
runApp('Desktop/Dashboard/KPI')
runApp('Desktop/Dashboard/KPI')
runApp('Desktop/Dashboard/KPI')
runApp('Desktop/Dashboard/KPI')
runApp('Desktop/Dashboard/KPI')
source('~/Desktop/Dashboard/ds-experiments/Plotting Time Series in R using Yahoo Finance data/Time_Series_Dgraphys.R', echo=TRUE)
source('~/Desktop/Dashboard/ds-experiments/Plotting Time Series in R using Yahoo Finance data/Time_Series_Dgraphys.R', echo=TRUE)
# Get IBM and Linkedin stock data from Yahoo Finance
ibm_url <- "http://real-chart.finance.yahoo.com/table.csv?s=IBM&a=07&b=24&c=2010&d=07&e=24&f=2015&g=d&ignore=.csv"
lnkd_url <- "http://real-chart.finance.yahoo.com/table.csv?s=LNKD&a=07&b=24&c=2010&d=07&e=24&f=2015&g=d&ignore=.csv"
yahoo.read <- function(url){
dat <- read.table(url,header=TRUE,sep=",")
df <- dat[,c(1,5)]
df$Date <- as.Date(as.character(df$Date))
return(df)}
ibm  <- yahoo.read(ibm_url)
lnkd <- yahoo.read(lnkd_url)
View(ibm)
source('~/Desktop/Dashboard/ds-experiments/Plotting Time Series in R using Yahoo Finance data/Time_Series_Dgraphys.R', echo=TRUE)
source('~/Desktop/Dashboard/ds-experiments/Plotting Time Series in R using Yahoo Finance data/Time_Series_Dgraphys.R', echo=TRUE)
ggplot(ibm,aes(Date,Close)) +
geom_line(aes(color="ibm")) +
geom_line(data=lnkd,aes(color="lnkd")) +
labs(color="Legend") +
scale_colour_manual("", breaks = c("ibm", "lnkd"),
values = c("blue", "brown")) +
ggtitle("Closing Stock Prices: IBM & Linkedin") +
theme(plot.title = element_text(lineheight=.7, face="bold"))
# Plot with the htmlwidget dygraphs
# dygraph() needs xts time series objects
ibm_xts <- xts(ibm$Close,order.by=ibm$Date,frequency=365)
lnkd_xts <- xts(lnkd$Close,order.by=lnkd$Date,frequency=365)
stocks <- cbind(ibm_xts,lnkd_xts)
dygraph(stocks,ylab="Close",
main="IBM and Linkedin Closing Stock Prices") %>%
dySeries("..1",label="IBM") %>%
dySeries("..2",label="LNKD") %>%
dyOptions(colors = c("blue","brown")) %>%
dyRangeSelector()
View(stocks)
View(stocks)
source('~/Desktop/Dashboard/ds-experiments/Plotting Time Series in R using Yahoo Finance data/Time_Series_Dgraphys.R', echo=TRUE)
# dygraph() needs xts time series objects
ibm_xts <- xts(ibm$Close,order.by=ibm$Date,frequency=365)
lnkd_xts <- xts(lnkd$Close,order.by=lnkd$Date,frequency=365)
stocks <- cbind(ibm_xts,lnkd_xts)
dygraph(stocks,ylab="Closing Stock Prices",
main="IBM and Linkedin Closing Stock Prices") %>%
dySeries("..1",label="IBM") %>%
dySeries("..2",label="LNKD") %>%
dyOptions(colors = c("blue","brown")) %>%
dyRangeSelector()
View(stocks)
shiny::runApp('Desktop/Dashboard/KPI')
runApp('Desktop/Dashboard/KPI')
shiny::runApp('Desktop/Dashboard/KPI')
runApp('Desktop/Dashboard/KPI')
runApp('Desktop/Dashboard/KPI')
setwd("~/Desktop/R_Projects/2015 Tinana Dengue fever Analysis using R")
str(dengue)
dengue <- read.csv("dengue-20151107-big5.csv")
dengue <- read.csv("dengue-20151107-utf8.csv")
str(dengue)
View(dengue)
summary(dengue)
install.packages("ggmap")
source('~/Desktop/R_Projects/2015 Tinana Dengue fever Analysis using R/dengue.R', echo=TRUE)
source('~/Desktop/R_Projects/2015 Tinana Dengue fever Analysis using R/dengue.R', echo=TRUE)
source('~/Desktop/R_Projects/2015 Tinana Dengue fever Analysis using R/dengue.R', echo=TRUE)
View(dengue)
source('~/Desktop/R_Projects/2015 Tinana Dengue fever Analysis using R/dengue.R', echo=TRUE)
source('~/Desktop/R_Projects/2015 Tinana Dengue fever Analysis using R/dengue.R', echo=TRUE)
source('~/Desktop/R_Projects/2015 Tinana Dengue fever Analysis using R/dengue.R', echo=TRUE)
map <- get_map(location = c(lon = 120.246100, lat = 23.121198),
zoom = 10, language = "zh-TW")
ggmap(map, darken = c(0.5, "white")) +
geom_point(aes(x = 經度座標, y = 緯度座標),
color = "red", data = dengue.tn)
levels(dengue.tn$區別)
dengue.tn[dengue.tn$區別 == "北　區", ]$區別 <- "北區"
dengue.tn[dengue.tn$區別 == "東　區", ]$區別 <- "東區"
dengue.tn[dengue.tn$區別 == "南　區" | dengue.tn$區別 == "南    區", ]$區別 <- "南區"
dengue.tn[dengue.tn$區別 == "永康區 ", ]$區別 <- "永康區"
dengue.tn$區別 <- factor(dengue.tn$區別)
levels(dengue.tn$區別)
# plot
hist(as.Date(dengue.tn$確診日), breaks = "weeks",
freq = TRUE, main = "登革熱每週病例數", xlab = "日期",
ylab = "病例數", format = "%m/%d")
dengue.tn$month <- format(as.Date(dengue.tn$確診日), "%m")
table(dengue.tn$month)
barplot(table(dengue.tn$month), xlab = "月份", ylab = "病例數",
main = "登革熱每月病例數")
# plot ggplot2
library(ggplot2)
library(scales)
ggplot(dengue.tn, aes(x=as.Date(確診日))) +
stat_bin(binwidth=7, position="identity") +
scale_x_date(breaks=date_breaks(width="1 month")) +
theme(axis.text.x = element_text(angle=90)) +
xlab("日期") + ylab("病例數") +
ggtitle("登革熱每週病例數")
dengue.region.summary <- sort(summary(dengue.tn$區別), decreasing = FALSE)
dengue.region.summary
barplot(dengue.region.summary, las = 2, horiz = TRUE,
main = "各行政區病例統計", xlab = "病例數")
barplot(dengue.region.summary, las = 2, horiz = TRUE,
main = "各行政區病例統計", xlab = "病例數")
pie(dengue.region.summary)
